type: single # single|window, maybe add opt
key: kNN_GNN_models #added to the csv names
evaluation: evaluation #evaluation|evaluation_last|evaluation_multiple|evaluation_user_based|evaluation_user_based_multiple
data:
  name: diginetica #added in the end of the csv names
  folder: data/diginetica/prepare/
  prefix: diginetica
  opts: {sessions_test: 100, sess_type: None} # sessions_test: "S" or "M" or "L"
results:
  folder: results/
metrics:
- class: accuracy.MRR
  length: [3,5,10,15,20]
- class: accuracy.CatD
  length: [3,5,10,15,20]
- class: accuracy.HitRate
  length: [3,5,10,15,20]
- class: accuracy_multiple.NDCG
  length: [3,5,10,15,20]
- class: coverage.Coverage
  length: [20]
- class: popularity.Popularity
  length: [20]
- class: saver.Saver
  length: [50]
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
algorithms:
# GNN models
- class: FLCSP.FLCSP_cate.FLCSP_cate      
  params: {epoch: 15, lr: 0.001, batch_size: 100, embedding_size: 50, hidden_size: 100, dropout: 0.1, l2: 0.00001}
  key: FLCSP_cate
- class: GCEGNN.GCEGNN.GCEGNN
  params: {epoch: 4, lr: 0.001, batch_size: 20, embedding: 50, l2: 0.0001}
  key: GCEGNN
- class: GNRRW.GNRRW.GNRRW
  params: {epoch: 10, lr: 0.0045, batch_size: 200, hidden_size: 16, l2: 0.00001}
  key: GNRRW
- class: TAGNN.TAGNN.TAGNN
  params: {epoch: 20, lr: 0.0007, batch_size: 100, embedding_size: 100, l2: 0.00001}
  key: TAGNN